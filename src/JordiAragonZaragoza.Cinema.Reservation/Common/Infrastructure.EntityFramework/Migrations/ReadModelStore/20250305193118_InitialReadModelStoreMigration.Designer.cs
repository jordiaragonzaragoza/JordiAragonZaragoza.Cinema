// <auto-generated />
using System;
using JordiAragonZaragoza.Cinema.Reservation.Common.Infrastructure.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace JordiAragonZaragoza.Cinema.Reservation.Common.Infrastructure.EntityFramework.Migrations.ReadModelStore
{
    [DbContext(typeof(ReservationReadModelContext))]
    [Migration("20250305193118_InitialReadModelStoreMigration")]
    partial class InitialReadModelStoreMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("JordiAragonZaragoza.Cinema.Reservation.Auditorium.Application.Contracts.ReadModels.AuditoriumReadModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Auditoriums");
                });

            modelBuilder.Entity("JordiAragonZaragoza.Cinema.Reservation.Movie.Application.Contracts.ReadModels.MovieReadModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<TimeSpan>("Runtime")
                        .HasColumnType("interval");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("JordiAragonZaragoza.Cinema.Reservation.Showtime.Application.Contracts.ReadModels.AvailableSeatReadModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AuditoriumId")
                        .HasColumnType("uuid");

                    b.Property<string>("AuditoriumName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Row")
                        .HasColumnType("integer");

                    b.Property<Guid>("SeatId")
                        .HasColumnType("uuid");

                    b.Property<int>("SeatNumber")
                        .HasColumnType("integer");

                    b.Property<Guid>("ShowtimeId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("AvailableSeats");
                });

            modelBuilder.Entity("JordiAragonZaragoza.Cinema.Reservation.Showtime.Application.Contracts.ReadModels.ShowtimeReadModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AuditoriumId")
                        .HasColumnType("uuid");

                    b.Property<string>("AuditoriumName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("MovieId")
                        .HasColumnType("uuid");

                    b.Property<TimeSpan>("MovieRuntime")
                        .HasColumnType("interval");

                    b.Property<string>("MovieTitle")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("SessionDateOnUtc")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Showtimes");
                });

            modelBuilder.Entity("JordiAragonZaragoza.Cinema.Reservation.Showtime.Application.Contracts.ReadModels.TicketReadModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AuditoriumName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("CreatedTimeOnUtc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsPurchased")
                        .HasColumnType("boolean");

                    b.Property<string>("MovieTitle")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("SessionDateOnUtc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ShowtimeId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("JordiAragonZaragoza.SharedKernel.Infrastructure.ProjectionCheckpoint.Checkpoint", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("CheckpointedAtOnUtc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("Position")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.ToTable("__Checkpoints", (string)null);
                });

            modelBuilder.Entity("JordiAragonZaragoza.Cinema.Reservation.Showtime.Application.Contracts.ReadModels.TicketReadModel", b =>
                {
                    b.OwnsMany("JordiAragonZaragoza.Cinema.Reservation.Auditorium.Application.Contracts.ReadModels.SeatReadModel", "Seats", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("uuid");

                            b1.Property<Guid>("TicketId")
                                .HasColumnType("uuid");

                            b1.Property<int>("Row")
                                .HasColumnType("integer");

                            b1.Property<int>("SeatNumber")
                                .HasColumnType("integer");

                            b1.HasKey("Id", "TicketId");

                            b1.HasIndex("TicketId");

                            b1.ToTable("TicketsSeats", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("TicketId");
                        });

                    b.Navigation("Seats");
                });
#pragma warning restore 612, 618
        }
    }
}
